// Get Defender status
let defenderStatus = securityresources
| where type == "microsoft.security/pricings"
| where name == "AppServices"
| extend DefenderStatus = case(
    tostring(properties.pricingTier) == "Standard", "Enabled",
    tostring(properties.pricingTier) == "Free", "Disabled",
    "NotConfigured")
| project subscriptionId, DefenderStatus;

// Get subscription names
let subscriptions = resourcecontainers
| where type == "microsoft.resources/subscriptions"
| project subscriptionId, SubscriptionName=name;

// Get App Service security details
let appServices = resources
| where type =~ 'microsoft.web/sites'
| extend 
    PublicAccess = iff(isnotempty(properties.hostNames) and 
                  tostring(properties.hostNameSslStates[0].hostType) == "Standard",
                  "Public", "Internal"),
    HttpsOnly = tobool(properties.httpsOnly),
    MinTlsVersion = tostring(properties.siteConfig.minTlsVersion)
| project subscriptionId, PublicAccess, HttpsOnly, MinTlsVersion;

// Combine all data
defenderStatus
| join kind=inner (subscriptions) on subscriptionId
| join kind=leftouter (
    appServices
    | summarize 
        AppServiceCount = count(),
        PublicApps = countif(PublicAccess == "Public"),
        NonHttpsApps = countif(HttpsOnly == false),
        WeakTlsApps = countif(MinTlsVersion != "1.2")
    by subscriptionId
) on subscriptionId
| project 
    SubscriptionName,
    DefenderStatus,
    TotalAppServices = iff(isnull(AppServiceCount), 0, AppServiceCount),
    PublicApps = iff(isnull(PublicApps), 0, PublicApps),
    AppsWithoutHttps = iff(isnull(NonHttpsApps), 0, NonHttpsApps),
    AppsWithWeakTls = iff(isnull(WeakTlsApps), 0, WeakTlsApps),
    RiskScore = case(
        TotalAppServices == 0, 0,
        PublicApps > 0 and DefenderStatus == "Disabled", 10,
        PublicApps > 0, 5,
        DefenderStatus == "Disabled", 3,
        1
    )
| order by RiskScore desc, SubscriptionName asc
