let defenderData = securityresources
| where type == "microsoft.security/pricings"
| where name == "AppServices"
| project subscriptionId, rawStatus = properties.pricingTier;

let appServiceData = resources
| where type =~ 'microsoft.web/sites'
| summarize 
    appServiceCount = count(),
    publicAppCount = countif(isnotempty(properties.hostNames) and properties.hostNameSslStates[0].hostType == "Standard")
by subscriptionId;

defenderData
| join kind=leftouter (appServiceData) on subscriptionId
| join kind=inner (
    resourcecontainers
    | where type == "microsoft.resources/subscriptions"
    | project subscriptionId, subscriptionName=name
) on subscriptionId
| project
    subscriptionName,
    defenderStatus = iff(rawStatus == "Standard", "Enabled", 
                   iff(rawStatus == "Free", "Disabled", 
                   "NotConfigured")),
    appServiceCount = iff(isnull(appServiceCount), 0, appServiceCount),
    publicAppCount = iff(isnull(publicAppCount), 0, publicAppCount),
    riskScore = case(
        appServiceCount == 0, 0,
        publicAppCount > 0 and rawStatus == "Free", 10,
        publicAppCount > 0, 5,
        rawStatus == "Free", 3,
        1
    )
| order by riskScore desc, subscriptionName asc
